import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { gql } from "@apollo/client";
import client from "../apollo-client";


// Importing Navbar
import SearchAppBar from "./components/Navbar/navbar.jsx"


// Importing graphs
import { CpuUsageGraph } from "./components/Graphs/CpuUsageGraph.jsx";
import { ActiveControllersGraph } from "./components/Graphs/ActiveControllersGraph.jsx";
import { BrokersOnlineGraph } from "./components/Graphs/BrokersOnlineGraph.jsx";
import { TotalBrokers } from "./components/Graphs/TotalBrokers.jsx";
import { UnderReplicatedPartitionsGraph } from "./components/Graphs/UnderReplicatedPartitionsGraph.jsx";
import { GpuUsageGraph } from "./components/Graphs/GpuUsageGraph.jsx";
import { OfflinePartitionCount } from "./components/Graphs/OfflinePartitionCount.jsx";
import { OnlinePartitionsGraph } from "./components/Graphs/OnlinePartitionsGraph.jsx";
import { UncleanLeaderElectionRate } from "./components/Graphs/UncleanLeaderElectionRate.jsx";
import { UnderMinISSRPartitions } from "./components/Graphs/UnderMinISSRPartitions.jsx";



export default function Home({ countries }) {
  return (
    <div className={styles.container}>
      <SearchAppBar/>
      <Head>
        <title>Lighthouse</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Lighthouse
        </h1>


<div className={styles.cardGrid1}>
        
        <div id = {styles.card1}>
        <CpuUsageGraph/>
        </div>

        <div id = {styles.card2}>
        <GpuUsageGraph/>
        </div>

</div>




<div className={styles.cardGrid2}>

        <div id = {styles.card3}>
        <TotalBrokers/>
        </div>

        <div id = {styles.card4}>
        <UnderReplicatedPartitionsGraph/>
        </div>

        <div id = {styles.card5}>
        <ActiveControllersGraph/>
        </div>

        <div id = {styles.card6}>
        <OnlinePartitionsGraph/>
        </div >

        <div id = {styles.card7}>
        <BrokersOnlineGraph/>
        </div>

        <div id = {styles.card8}>
        <OfflinePartitionCount/>
        </div>

        <div id = {styles.card9}>
        <UnderMinISSRPartitions/>
        </div>

        <div id = {styles.card10}>
        <UncleanLeaderElectionRate/>
        </div>

</div>


        {/* <div className={styles.grid}>
          {countries.map((country) => (
            <div key={country.code} className={styles.card}>
              <h3><a href="#country-name" aria-hidden="true" className="aal_anchor" id="country-name"><svg aria-hidden="true" className="aal_svg" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fillRule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><CpuUsageGraph/></h3>
              <p>
                {country.code} - {country.emoji}
              </p>
            </div>
          ))}
        </div> */}
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export async function getStaticProps() {
  const { data } = await client.query({
    query: gql`
      query Countries {
        countries {
          code
          name
          emoji
        }
      }
    `,
  });

  return {
    props: {
      countries: data.countries.slice(0, 4),
    },
 };
}